name: CICD for Serverless Application
run-name: ${{ github.actor }} is doing CICD for serverless application

on:
  push:
    branches: [ main, "*"]

jobs:
  pre-deploy:
    runs-on: ubuntu-latest
    steps:
      - run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event"
      - run: echo "🐧 This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "🔎 The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."

  retrieve_secret:
    runs-on: ubuntu-latest
    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.REGION }}

      # Firstly, insert your secrets in AWS Secret Manager
      # Then, you can retrieve the secrets based on your secret-id
      # If you have multiple secret key and value pairs like mine, you can parse
      # the entire json object and print the values you'd like to display/use

      - name: Get Secret Object
        run: |
          secret_object=$(aws secretsmanager get-secret-value --secret-id prod/device/secret --query SecretString --output json)

          # Parse specific keys from the secret object
          secret_value_mobile=$(echo "$secret_object" | jq -r '. | fromjson | .martin_mobile')
          secret_value_laptop=$(echo "$secret_object" | jq -r '. | fromjson | .martin_laptop')

          echo "Secret value for mobile is: $secret_value_mobile"
          echo "Secret value for laptop is: $secret_value_laptop"

  retrieve_parameters:
    runs-on: ubuntu-latest
    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.REGION }}

      # Firstly, insert your parameter in AWS Systems Manager > Parameter Store
      # Then, you can retrieve the parameters using aws ssm get-parameter command

      - name: Get parameter object
        run: |
          phone_value=$(aws ssm get-parameter --name martin_phone_type --query Parameter.Value --output text)
          echo "Martin's phone model is: $phone_value"          

  install-dependencies:
    runs-on: ubuntu-latest
    needs: pre-deploy
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
      - name: Run Installation of Dependencies Commands
        run: npm install

  deploy:
    name: deploy
    runs-on: ubuntu-latest
    needs: [install-dependencies, retrieve_parameters, retrieve_secret]
    strategy:
      matrix:
        node-version: [18.x]
    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
    - run: npm ci
    - name: serverless deploy
      uses: serverless/github-action@v3.2
      with:
        args: deploy
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}